//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.test
{

public sealed partial class SkillParam :  Bright.Config.BeanBase 
{
    public SkillParam(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["skillName"].IsString) { throw new SerializationException(); }  SkillName = _json["skillName"]; }
        { if(!_json["power"].IsNumber) { throw new SerializationException(); }  Power = _json["power"]; }
        { if(!_json["attackPointEndTime"].IsNumber) { throw new SerializationException(); }  AttackPointEndTime = _json["attackPointEndTime"]; }
        { if(!_json["attackPointNormalizedEndTime"].IsNumber) { throw new SerializationException(); }  AttackPointNormalizedEndTime = _json["attackPointNormalizedEndTime"]; }
        { if(!_json["attackAnimationStartTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationStartTime = _json["attackAnimationStartTime"]; }
        { if(!_json["attackAnimationNormalizedStartTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationNormalizedStartTime = _json["attackAnimationNormalizedStartTime"]; }
        { if(!_json["attackAnimationEndTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationEndTime = _json["attackAnimationEndTime"]; }
        { if(!_json["attackAnimationNormalizedEndTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationNormalizedEndTime = _json["attackAnimationNormalizedEndTime"]; }
        { if(!_json["backswingStartTime"].IsNumber) { throw new SerializationException(); }  BackswingStartTime = _json["backswingStartTime"]; }
        { if(!_json["owner"].IsString) { throw new SerializationException(); }  Owner = _json["owner"]; }
        { if(!_json["voice"].IsString) { throw new SerializationException(); }  Voice = _json["voice"]; }
        { if(!_json["motionSpeedBeforeAttack"].IsNumber) { throw new SerializationException(); }  MotionSpeedBeforeAttack = _json["motionSpeedBeforeAttack"]; }
        { if(!_json["motionSpeedDuringAttack"].IsNumber) { throw new SerializationException(); }  MotionSpeedDuringAttack = _json["motionSpeedDuringAttack"]; }
        { if(!_json["motionSpeedWhileHit"].IsNumber) { throw new SerializationException(); }  MotionSpeedWhileHit = _json["motionSpeedWhileHit"]; }
        PostInit();
    }

    public SkillParam(int id, string skillName, int power, float attackPointEndTime, float attackPointNormalizedEndTime, float attackAnimationStartTime, float attackAnimationNormalizedStartTime, float attackAnimationEndTime, float attackAnimationNormalizedEndTime, float backswingStartTime, string owner, string voice, float motionSpeedBeforeAttack, float motionSpeedDuringAttack, float motionSpeedWhileHit ) 
    {
        this.Id = id;
        this.SkillName = skillName;
        this.Power = power;
        this.AttackPointEndTime = attackPointEndTime;
        this.AttackPointNormalizedEndTime = attackPointNormalizedEndTime;
        this.AttackAnimationStartTime = attackAnimationStartTime;
        this.AttackAnimationNormalizedStartTime = attackAnimationNormalizedStartTime;
        this.AttackAnimationEndTime = attackAnimationEndTime;
        this.AttackAnimationNormalizedEndTime = attackAnimationNormalizedEndTime;
        this.BackswingStartTime = backswingStartTime;
        this.Owner = owner;
        this.Voice = voice;
        this.MotionSpeedBeforeAttack = motionSpeedBeforeAttack;
        this.MotionSpeedDuringAttack = motionSpeedDuringAttack;
        this.MotionSpeedWhileHit = motionSpeedWhileHit;
        PostInit();
    }

    public static SkillParam DeserializeSkillParam(JSONNode _json)
    {
        return new test.SkillParam(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// スキル名
    /// </summary>
    public string SkillName { get; private set; }
    /// <summary>
    /// 攻撃力
    /// </summary>
    public int Power { get; private set; }
    /// <summary>
    /// 準備モーションの終了時間
    /// </summary>
    public float AttackPointEndTime { get; private set; }
    public float AttackPointNormalizedEndTime { get; private set; }
    /// <summary>
    /// アタックモーションの開始時間
    /// </summary>
    public float AttackAnimationStartTime { get; private set; }
    public float AttackAnimationNormalizedStartTime { get; private set; }
    /// <summary>
    /// アタックモーションの終了時間
    /// </summary>
    public float AttackAnimationEndTime { get; private set; }
    public float AttackAnimationNormalizedEndTime { get; private set; }
    public float BackswingStartTime { get; private set; }
    public string Owner { get; private set; }
    public string Voice { get; private set; }
    public float MotionSpeedBeforeAttack { get; private set; }
    public float MotionSpeedDuringAttack { get; private set; }
    public float MotionSpeedWhileHit { get; private set; }

    public const int __ID__ = 203861944;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillName:" + SkillName + ","
        + "Power:" + Power + ","
        + "AttackPointEndTime:" + AttackPointEndTime + ","
        + "AttackPointNormalizedEndTime:" + AttackPointNormalizedEndTime + ","
        + "AttackAnimationStartTime:" + AttackAnimationStartTime + ","
        + "AttackAnimationNormalizedStartTime:" + AttackAnimationNormalizedStartTime + ","
        + "AttackAnimationEndTime:" + AttackAnimationEndTime + ","
        + "AttackAnimationNormalizedEndTime:" + AttackAnimationNormalizedEndTime + ","
        + "BackswingStartTime:" + BackswingStartTime + ","
        + "Owner:" + Owner + ","
        + "Voice:" + Voice + ","
        + "MotionSpeedBeforeAttack:" + MotionSpeedBeforeAttack + ","
        + "MotionSpeedDuringAttack:" + MotionSpeedDuringAttack + ","
        + "MotionSpeedWhileHit:" + MotionSpeedWhileHit + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
