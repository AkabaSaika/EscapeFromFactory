//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.test
{

public sealed partial class SkillParam :  Bright.Config.BeanBase 
{
    public SkillParam(JSONNode _json) 
    {
        { if(!_json["id"].IsNumber) { throw new SerializationException(); }  Id = _json["id"]; }
        { if(!_json["skillName"].IsString) { throw new SerializationException(); }  SkillName = _json["skillName"]; }
        { if(!_json["power"].IsNumber) { throw new SerializationException(); }  Power = _json["power"]; }
        { if(!_json["attackPointEndTime"].IsNumber) { throw new SerializationException(); }  AttackPointEndTime = _json["attackPointEndTime"]; }
        { if(!_json["attackAnimationStartTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationStartTime = _json["attackAnimationStartTime"]; }
        { if(!_json["attackAnimationEndTime"].IsNumber) { throw new SerializationException(); }  AttackAnimationEndTime = _json["attackAnimationEndTime"]; }
        { if(!_json["backswingStartTime"].IsNumber) { throw new SerializationException(); }  BackswingStartTime = _json["backswingStartTime"]; }
        { if(!_json["owner"].IsString) { throw new SerializationException(); }  Owner = _json["owner"]; }
        PostInit();
    }

    public SkillParam(int id, string skillName, int power, float attackPointEndTime, float attackAnimationStartTime, float attackAnimationEndTime, float backswingStartTime, string owner ) 
    {
        this.Id = id;
        this.SkillName = skillName;
        this.Power = power;
        this.AttackPointEndTime = attackPointEndTime;
        this.AttackAnimationStartTime = attackAnimationStartTime;
        this.AttackAnimationEndTime = attackAnimationEndTime;
        this.BackswingStartTime = backswingStartTime;
        this.Owner = owner;
        PostInit();
    }

    public static SkillParam DeserializeSkillParam(JSONNode _json)
    {
        return new test.SkillParam(_json);
    }

    public int Id { get; private set; }
    /// <summary>
    /// スキル名
    /// </summary>
    public string SkillName { get; private set; }
    /// <summary>
    /// 攻撃力
    /// </summary>
    public int Power { get; private set; }
    /// <summary>
    /// 準備モーションの終了時間
    /// </summary>
    public float AttackPointEndTime { get; private set; }
    /// <summary>
    /// アタックモーションの開始時間
    /// </summary>
    public float AttackAnimationStartTime { get; private set; }
    /// <summary>
    /// アタックモーションの終了時間
    /// </summary>
    public float AttackAnimationEndTime { get; private set; }
    public float BackswingStartTime { get; private set; }
    public string Owner { get; private set; }

    public const int __ID__ = 203861944;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "SkillName:" + SkillName + ","
        + "Power:" + Power + ","
        + "AttackPointEndTime:" + AttackPointEndTime + ","
        + "AttackAnimationStartTime:" + AttackAnimationStartTime + ","
        + "AttackAnimationEndTime:" + AttackAnimationEndTime + ","
        + "BackswingStartTime:" + BackswingStartTime + ","
        + "Owner:" + Owner + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
